
# Configuration properties for the h2 database used in this project are stored here

# Database connection configuration:
#spring.datasource.url=jdbc:h2:tcp://localhost:8082/rollercoaster
spring.datasource.url=jdbc:h2:file:./src/main/resources/database/rollerCoaster;AUTO_SERVER=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
sprng.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Enabling H2 Console
spring.h2.console.enabled=true

# Custom H2 Console URL
spring.h2.console.path=/h2

# The mode how the database will be initialized:
# 'create-drop' or 'create' (every start a fresh database),
# 'update' (attempt to add new columns, constraints, etc
# but will never remove a column or constraint that may
# have existed previously) or
# 'validate' (Hibernate only validates whether the tables
# and columns exist, otherwise it throws an exception).
spring.jpa.hibernate.ddl-auto=create-drop

# Session store type:
spring.session.store-type=redis


# Spring Thymeleaf configuration, so the server knows, where the .html files are
spring.thymeleaf.suffix=.html
spring.mvc.view.suffix=.html
spring.web.resources.add-mappings=true